Index.PACKAGES = {"com.markblokpoel.lanag.math" : [{"name" : "com.markblokpoel.lanag.math.Probability", "shortDescription" : "A collection of utility functions related to probability theory.", "object" : "com\/markblokpoel\/lanag\/math\/Probability$.html", "members_object" : [{"label" : "entropy", "tail" : "(distribution: Vector[Double]): Double", "member" : "com.markblokpoel.lanag.math.Probability.entropy", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#entropy(distribution:Vector[Double]):Double", "kind" : "def"}, {"label" : "softArgMax", "tail" : "(values: Vector[Double], beta: Double): Option[Int]", "member" : "com.markblokpoel.lanag.math.Probability.softArgMax", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#softArgMax(values:Vector[Double],beta:Double):Option[Int]", "kind" : "def"}, {"label" : "argMax", "tail" : "(values: Vector[Double]): Option[Int]", "member" : "com.markblokpoel.lanag.math.Probability.argMax", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#argMax(values:Vector[Double]):Option[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/math\/Probability$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.math.Ranges", "shortDescription" : "A collection of utility functions related to ranges.", "object" : "com\/markblokpoel\/lanag\/math\/Ranges$.html", "members_object" : [{"label" : "range", "tail" : "(step: Double, lowerbound: Double, upperbound: Double): Seq[Double]", "member" : "com.markblokpoel.lanag.math.Ranges.range", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#range(step:Double,lowerbound:Double,upperbound:Double):Seq[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/math\/Ranges$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.markblokpoel.lanag" : [], "com.markblokpoel.lanag.rsa" : [{"name" : "com.markblokpoel.lanag.rsa.EDIT_DISTANCE", "shortDescription" : "Helper object that returns a function computing the edit distance between two binary string representations.", "object" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html", "members_object" : [{"label" : "name", "tail" : "(): String", "member" : "com.markblokpoel.lanag.rsa.EDIT_DISTANCE.name", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#name:String", "kind" : "def"}, {"label" : "apply", "tail" : "(r1: Vector[Boolean], r2: Vector[Boolean]): Double", "member" : "com.markblokpoel.lanag.rsa.EDIT_DISTANCE.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#apply(r1:Vector[Boolean],r2:Vector[Boolean]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/EDIT_DISTANCE$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.rsa.HAMMING_DISTANCE", "shortDescription" : "Helper object that returns a function computing the hamming distance between two binary string representations.", "object" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html", "members_object" : [{"label" : "name", "tail" : "(): String", "member" : "com.markblokpoel.lanag.rsa.HAMMING_DISTANCE.name", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#name:String", "kind" : "def"}, {"label" : "apply", "tail" : "(r1: Vector[Boolean], r2: Vector[Boolean]): Double", "member" : "com.markblokpoel.lanag.rsa.HAMMING_DISTANCE.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#apply(r1:Vector[Boolean],r2:Vector[Boolean]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/HAMMING_DISTANCE$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.rsa.Lexicon", "shortDescription" : "A lexicon as defined in the Rational Speech Act theory (Frank & Goodman, 2012).", "object" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html", "members_object" : [{"label" : "generateConsistentAmbiguityMapping", "tail" : "(ambiguity: Int, vocabularySize: Int, contextSize: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.generateConsistentAmbiguityMapping", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#generateConsistentAmbiguityMapping(ambiguity:Int,vocabularySize:Int,contextSize:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "generateRandomBinaryLexicon", "tail" : "(probability: Double, vocabularySize: Int, contextSize: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.generateRandomBinaryLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#generateRandomBinaryLexicon(probability:Double,vocabularySize:Int,contextSize:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "apply", "tail" : "(matrix: Array[Array[Double]]): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#apply(matrix:Array[Array[Double]]):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "apply", "tail" : "(matrix: Vector[Vector[Double]]): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#apply(matrix:Vector[Vector[Double]]):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Lexicon) ⇒ Boolean, msg: ⇒ Any): Lexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Lexicon) ⇒ Boolean): Lexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Lexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Lexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Lexicon, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Lexicon, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.markblokpoel.lanag.rsa.Lexicon.toString", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#toString():String", "kind" : "def"}, {"label" : "removalBinaryMutation", "tail" : "(removalRate: Double, threshold: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.removalBinaryMutation", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#removalBinaryMutation(removalRate:Double,threshold:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "additiveBinaryMutation", "tail" : "(additionRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.additiveBinaryMutation", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#additiveBinaryMutation(additionRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "mixReferents", "tail" : "(mixRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.mixReferents", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#mixReferents(mixRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "mutate", "tail" : "(mutationRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.mutate", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#mutate(mutationRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "to2DVector", "tail" : "(): Vector[Vector[Double]]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.to2DVector", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#to2DVector:Vector[Vector[Double]]", "kind" : "def"}, {"label" : "meanAndVarianceAmbiguity", "tail" : "(threshold: Double): (Double, Double)", "member" : "com.markblokpoel.lanag.rsa.Lexicon.meanAndVarianceAmbiguity", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#meanAndVarianceAmbiguity(threshold:Double):(Double,Double)", "kind" : "def"}, {"label" : "meanAmbiguity", "tail" : "(threshold: Double): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.meanAmbiguity", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#meanAmbiguity(threshold:Double):Double", "kind" : "def"}, {"label" : "asymmetryWith", "tail" : "(that: Lexicon, similarity: Double): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.asymmetryWith", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#asymmetryWith(that:com.markblokpoel.lanag.rsa.Lexicon,similarity:Double):Double", "kind" : "def"}, {"label" : "setOrderAsListener", "tail" : "(n: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.setOrderAsListener", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#setOrderAsListener(n:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "setOrderAsSpeaker", "tail" : "(n: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.setOrderAsSpeaker", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#setOrderAsSpeaker(n:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "dotT", "tail" : "(vector: Vector[Double]): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.dotT", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#dotT(vector:Vector[Double]):Vector[Double]", "kind" : "def"}, {"label" : "dot", "tail" : "(vector: Vector[Double]): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.dot", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#dot(vector:Vector[Double]):Vector[Double]", "kind" : "def"}, {"label" : "getColumn", "tail" : "(j: Int): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.getColumn", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#getColumn(j:Int):Vector[Double]", "kind" : "def"}, {"label" : "getRow", "tail" : "(i: Int): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.getRow", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#getRow(i:Int):Vector[Double]", "kind" : "def"}, {"label" : "update", "tail" : "(i: Int, j: Int, v: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.update", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#update(i:Int,j:Int,v:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#apply(i:Int,j:Int):Double", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.rsa.Lexicon#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.data", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#data:Vector[Double]", "kind" : "val"}, {"label" : "contextSize", "tail" : ": Int", "member" : "com.markblokpoel.lanag.rsa.Lexicon.contextSize", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#contextSize:Int", "kind" : "val"}, {"label" : "vocabularySize", "tail" : ": Int", "member" : "com.markblokpoel.lanag.rsa.Lexicon.vocabularySize", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#vocabularySize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/rsa\/Lexicon.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.rsa.StructuredLexicon", "shortDescription" : "A special type of Lexicon where signals and referents are represented by binary strings.", "object" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StructuredLexicon) ⇒ Boolean, msg: ⇒ Any): StructuredLexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StructuredLexicon) ⇒ Boolean): StructuredLexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StructuredLexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StructuredLexicon", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StructuredLexicon, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StructuredLexicon, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "representationLength", "tail" : ": Int", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.representationLength", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#representationLength:Int", "kind" : "val"}, {"label" : "getLexicon", "tail" : "(): Lexicon", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.getLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#getLexicon:com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.rsa.StructuredLexicon#<init>", "error" : "unsupported entity"}, {"label" : "mappingThreshold", "tail" : ": Option[Double]", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.mappingThreshold", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#mappingThreshold:Option[Double]", "kind" : "val"}, {"label" : "data", "tail" : ": Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.data", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#data:Vector[Double]", "kind" : "val"}, {"label" : "mappingFunction", "tail" : ": StructuredMappingFunction", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.mappingFunction", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#mappingFunction:com.markblokpoel.lanag.rsa.StructuredMappingFunction", "kind" : "val"}, {"label" : "contextRepresentations", "tail" : ": Vector[Vector[Boolean]]", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.contextRepresentations", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#contextRepresentations:Vector[Vector[Boolean]]", "kind" : "val"}, {"label" : "vocabularyRepresentations", "tail" : ": Vector[Vector[Boolean]]", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.vocabularyRepresentations", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#vocabularyRepresentations:Vector[Vector[Boolean]]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "com.markblokpoel.lanag.rsa.Lexicon.toString", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#toString():String", "kind" : "def"}, {"label" : "removalBinaryMutation", "tail" : "(removalRate: Double, threshold: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.removalBinaryMutation", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#removalBinaryMutation(removalRate:Double,threshold:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "additiveBinaryMutation", "tail" : "(additionRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.additiveBinaryMutation", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#additiveBinaryMutation(additionRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "mixReferents", "tail" : "(mixRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.mixReferents", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#mixReferents(mixRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "mutate", "tail" : "(mutationRate: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.mutate", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#mutate(mutationRate:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "to2DVector", "tail" : "(): Vector[Vector[Double]]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.to2DVector", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#to2DVector:Vector[Vector[Double]]", "kind" : "def"}, {"label" : "meanAndVarianceAmbiguity", "tail" : "(threshold: Double): (Double, Double)", "member" : "com.markblokpoel.lanag.rsa.Lexicon.meanAndVarianceAmbiguity", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#meanAndVarianceAmbiguity(threshold:Double):(Double,Double)", "kind" : "def"}, {"label" : "meanAmbiguity", "tail" : "(threshold: Double): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.meanAmbiguity", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#meanAmbiguity(threshold:Double):Double", "kind" : "def"}, {"label" : "asymmetryWith", "tail" : "(that: Lexicon, similarity: Double): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.asymmetryWith", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#asymmetryWith(that:com.markblokpoel.lanag.rsa.Lexicon,similarity:Double):Double", "kind" : "def"}, {"label" : "setOrderAsListener", "tail" : "(n: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.setOrderAsListener", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#setOrderAsListener(n:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "setOrderAsSpeaker", "tail" : "(n: Int): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.setOrderAsSpeaker", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#setOrderAsSpeaker(n:Int):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "dotT", "tail" : "(vector: Vector[Double]): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.dotT", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#dotT(vector:Vector[Double]):Vector[Double]", "kind" : "def"}, {"label" : "dot", "tail" : "(vector: Vector[Double]): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.dot", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#dot(vector:Vector[Double]):Vector[Double]", "kind" : "def"}, {"label" : "getColumn", "tail" : "(j: Int): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.getColumn", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#getColumn(j:Int):Vector[Double]", "kind" : "def"}, {"label" : "getRow", "tail" : "(i: Int): Vector[Double]", "member" : "com.markblokpoel.lanag.rsa.Lexicon.getRow", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#getRow(i:Int):Vector[Double]", "kind" : "def"}, {"label" : "update", "tail" : "(i: Int, j: Int, v: Double): Lexicon", "member" : "com.markblokpoel.lanag.rsa.Lexicon.update", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#update(i:Int,j:Int,v:Double):com.markblokpoel.lanag.rsa.Lexicon", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): Double", "member" : "com.markblokpoel.lanag.rsa.Lexicon.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#apply(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "contextSize", "tail" : ": Int", "member" : "com.markblokpoel.lanag.rsa.Lexicon.contextSize", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#contextSize:Int", "kind" : "val"}, {"label" : "vocabularySize", "tail" : ": Int", "member" : "com.markblokpoel.lanag.rsa.Lexicon.vocabularySize", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#vocabularySize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "generateBinaryStructuredLexicon", "tail" : "(vocabularyRepresentations: Vector[Vector[Boolean]], contextRepresentations: Vector[Vector[Boolean]], mappingFunction: StructuredMappingFunction, mappingThreshold: Double): StructuredLexicon", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.generateBinaryStructuredLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#generateBinaryStructuredLexicon(vocabularyRepresentations:Vector[Vector[Boolean]],contextRepresentations:Vector[Vector[Boolean]],mappingFunction:com.markblokpoel.lanag.rsa.StructuredMappingFunction,mappingThreshold:Double):com.markblokpoel.lanag.rsa.StructuredLexicon", "kind" : "def"}, {"label" : "generateBinaryStructuredLexicon", "tail" : "(representationLength: Int, mappingFunction: StructuredMappingFunction, mappingThreshold: Double, vocabularySize: Int, contextSize: Int): StructuredLexicon", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.generateBinaryStructuredLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#generateBinaryStructuredLexicon(representationLength:Int,mappingFunction:com.markblokpoel.lanag.rsa.StructuredMappingFunction,mappingThreshold:Double,vocabularySize:Int,contextSize:Int):com.markblokpoel.lanag.rsa.StructuredLexicon", "kind" : "def"}, {"label" : "generateGradedStructuredLexicon", "tail" : "(vocabularyRepresentations: Vector[Vector[Boolean]], contextRepresentations: Vector[Vector[Boolean]], mappingFunction: StructuredMappingFunction): StructuredLexicon", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.generateGradedStructuredLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#generateGradedStructuredLexicon(vocabularyRepresentations:Vector[Vector[Boolean]],contextRepresentations:Vector[Vector[Boolean]],mappingFunction:com.markblokpoel.lanag.rsa.StructuredMappingFunction):com.markblokpoel.lanag.rsa.StructuredLexicon", "kind" : "def"}, {"label" : "generateGradedStructuredLexicon", "tail" : "(representationLength: Int, mappingFunction: StructuredMappingFunction, vocabularySize: Int, contextSize: Int): StructuredLexicon", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.generateGradedStructuredLexicon", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#generateGradedStructuredLexicon(representationLength:Int,mappingFunction:com.markblokpoel.lanag.rsa.StructuredMappingFunction,vocabularySize:Int,contextSize:Int):com.markblokpoel.lanag.rsa.StructuredLexicon", "kind" : "def"}, {"label" : "mutateStructuredRepresentations", "tail" : "(listOfRepresentations: Vector[Vector[Boolean]], changeRate: Double): Vector[Vector[Boolean]]", "member" : "com.markblokpoel.lanag.rsa.StructuredLexicon.mutateStructuredRepresentations", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#mutateStructuredRepresentations(listOfRepresentations:Vector[Vector[Boolean]],changeRate:Double):Vector[Vector[Boolean]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/markblokpoel\/lanag\/rsa\/StructuredLexicon.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.rsa.StructuredMappingFunction", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StructuredMappingFunction) ⇒ Boolean, msg: ⇒ Any): StructuredMappingFunction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StructuredMappingFunction) ⇒ Boolean): StructuredMappingFunction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StructuredMappingFunction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StructuredMappingFunction", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StructuredMappingFunction, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StructuredMappingFunction, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "com.markblokpoel.lanag.rsa.StructuredMappingFunction.name", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#name:String", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(r1: Vector[Boolean], r2: Vector[Boolean]): Double", "member" : "com.markblokpoel.lanag.rsa.StructuredMappingFunction.apply", "link" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html#apply(r1:Vector[Boolean],r2:Vector[Boolean]):Double", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/markblokpoel\/lanag\/rsa\/StructuredMappingFunction.html", "kind" : "trait"}], "com.markblokpoel.lanag.core" : [{"name" : "com.markblokpoel.lanag.core.Agent", "shortDescription" : "Defines the Agent class architecture.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Agent[I, S]) ⇒ Boolean, msg: ⇒ Any): Agent[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Agent[I, S]) ⇒ Boolean): Agent[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Agent[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Agent[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Agent[I, S], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Agent[I, S], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.Agent#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asListener", "tail" : "(): Listener[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asListener", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#asListener:com.markblokpoel.lanag.core.Listener[I,S]", "kind" : "abstract def"}, {"label" : "asSpeaker", "tail" : "(): Speaker[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Agent.html#asSpeaker:com.markblokpoel.lanag.core.Speaker[I,S]", "kind" : "abstract def"}], "class" : "com\/markblokpoel\/lanag\/core\/Agent.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.core.AgentPair", "shortDescription" : "Data structure for storing pairs of agents, their type and their origin.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AgentPair[I, S, A, D]) ⇒ Boolean, msg: ⇒ Any): AgentPair[I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AgentPair[I, S, A, D]) ⇒ Boolean): AgentPair[I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): AgentPair[I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AgentPair[I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AgentPair[I, S, A, D], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AgentPair[I, S, A, D], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.AgentPair#<init>", "error" : "unsupported entity"}, {"label" : "originData", "tail" : ": D", "member" : "com.markblokpoel.lanag.core.AgentPair.originData", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#originData:D", "kind" : "val"}, {"label" : "agent2", "tail" : ": A", "member" : "com.markblokpoel.lanag.core.AgentPair.agent2", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#agent2:A", "kind" : "val"}, {"label" : "agent1", "tail" : ": A", "member" : "com.markblokpoel.lanag.core.AgentPair.agent1", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#agent1:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/AgentPair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/core\/AgentPair.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.core.ContentSignal", "shortDescription" : "A basic content signal.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ContentSignal) ⇒ Boolean, msg: ⇒ Any): ContentSignal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ContentSignal) ⇒ Boolean): ContentSignal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ContentSignal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ContentSignal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ContentSignal, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ContentSignal, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.core.ContentSignal.isDefined", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#isDefined:Boolean", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.ContentSignal#<init>", "error" : "unsupported entity"}, {"label" : "content", "tail" : ": Option[Int]", "member" : "com.markblokpoel.lanag.core.ContentSignal.content", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#content:Option[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/core\/ContentSignal.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.core.ContentSignalPrototype", "shortDescription" : "The prototype signal that has some content of type T.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ContentSignalPrototype[T]) ⇒ Boolean, msg: ⇒ Any): ContentSignalPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ContentSignalPrototype[T]) ⇒ Boolean): ContentSignalPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ContentSignalPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ContentSignalPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ContentSignalPrototype[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ContentSignalPrototype[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.ContentSignalPrototype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.core.ContentSignalPrototype.isDefined", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#isDefined:Boolean", "kind" : "abstract def"}, {"label" : "content", "tail" : ": T", "member" : "com.markblokpoel.lanag.core.ContentSignalPrototype.content", "link" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html#content:T", "kind" : "abstract val"}], "class" : "com\/markblokpoel\/lanag\/core\/ContentSignalPrototype.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.core.Data", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Data) ⇒ Boolean, msg: ⇒ Any): Data", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Data) ⇒ Boolean): Data", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Data", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Data", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Data, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Data, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Data.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Data.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A prototype type for storing simulation data in case classes.", "trait" : "com\/markblokpoel\/lanag\/core\/Data.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.Intention", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Intention) ⇒ Boolean, msg: ⇒ Any): Intention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Intention) ⇒ Boolean): Intention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Intention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Intention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Intention, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Intention, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Intention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The prototype intention type.", "trait" : "com\/markblokpoel\/lanag\/core\/Intention.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.IntentionPrototype", "shortDescription" : "The prototype intention that has some content of type T.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntentionPrototype[T]) ⇒ Boolean, msg: ⇒ Any): IntentionPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (IntentionPrototype[T]) ⇒ Boolean): IntentionPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): IntentionPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): IntentionPrototype[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (IntentionPrototype[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (IntentionPrototype[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.IntentionPrototype#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.core.IntentionPrototype.isDefined", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#isDefined:Boolean", "kind" : "abstract def"}, {"label" : "content", "tail" : ": T", "member" : "com.markblokpoel.lanag.core.IntentionPrototype.content", "link" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html#content:T", "kind" : "abstract val"}], "class" : "com\/markblokpoel\/lanag\/core\/IntentionPrototype.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.core.Interaction", "shortDescription" : "Defines agent interactions.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Interaction[I, S, A]) ⇒ Boolean, msg: ⇒ Any): Interaction[I, S, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Interaction[I, S, A]) ⇒ Boolean): Interaction[I, S, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Interaction[I, S, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Interaction[I, S, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Interaction[I, S, A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Interaction[I, S, A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "switchRoles", "tail" : "(): Unit", "member" : "com.markblokpoel.lanag.core.Interaction.switchRoles", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#switchRoles():Unit", "kind" : "def"}, {"label" : "pairId", "tail" : ": Long", "member" : "com.markblokpoel.lanag.core.Interaction.pairId", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#pairId:Long", "kind" : "val"}, {"member" : "com.markblokpoel.lanag.core.Interaction#<init>", "error" : "unsupported entity"}, {"label" : "originData", "tail" : ": Data", "member" : "com.markblokpoel.lanag.core.Interaction.originData", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#originData:com.markblokpoel.lanag.core.Data", "kind" : "val"}, {"label" : "agent2", "tail" : ": A", "member" : "com.markblokpoel.lanag.core.Interaction.agent2", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent2:A", "kind" : "val"}, {"label" : "agent1", "tail" : ": A", "member" : "com.markblokpoel.lanag.core.Interaction.agent1", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent1:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runAndCollectData", "tail" : "(): Data", "member" : "com.markblokpoel.lanag.core.Interaction.runAndCollectData", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#runAndCollectData:com.markblokpoel.lanag.core.Data", "kind" : "abstract def"}, {"label" : "stoppingCriterion", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.core.Interaction.stoppingCriterion", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#stoppingCriterion:Boolean", "kind" : "abstract def"}, {"label" : "turn", "tail" : "(): Data", "member" : "com.markblokpoel.lanag.core.Interaction.turn", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#turn:com.markblokpoel.lanag.core.Data", "kind" : "abstract def"}, {"label" : "currentListener", "tail" : ": ListenerType", "member" : "com.markblokpoel.lanag.core.Interaction.currentListener", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#currentListener:Interaction.this.ListenerType", "kind" : "abstract val"}, {"label" : "currentSpeaker", "tail" : ": SpeakerType", "member" : "com.markblokpoel.lanag.core.Interaction.currentSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#currentSpeaker:Interaction.this.SpeakerType", "kind" : "abstract val"}, {"label" : "agent2AsListener", "tail" : ": ListenerType", "member" : "com.markblokpoel.lanag.core.Interaction.agent2AsListener", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent2AsListener:Interaction.this.ListenerType", "kind" : "abstract val"}, {"label" : "agent1AsListener", "tail" : ": ListenerType", "member" : "com.markblokpoel.lanag.core.Interaction.agent1AsListener", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent1AsListener:Interaction.this.ListenerType", "kind" : "abstract val"}, {"label" : "agent2AsSpeaker", "tail" : ": SpeakerType", "member" : "com.markblokpoel.lanag.core.Interaction.agent2AsSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent2AsSpeaker:Interaction.this.SpeakerType", "kind" : "abstract val"}, {"label" : "agent1AsSpeaker", "tail" : ": SpeakerType", "member" : "com.markblokpoel.lanag.core.Interaction.agent1AsSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Interaction.html#agent1AsSpeaker:Interaction.this.SpeakerType", "kind" : "abstract val"}, {"member" : "com.markblokpoel.lanag.core.Interaction.ListenerType", "error" : "unsupported entity"}, {"member" : "com.markblokpoel.lanag.core.Interaction.SpeakerType", "error" : "unsupported entity"}], "class" : "com\/markblokpoel\/lanag\/core\/Interaction.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.core.Listener", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Listener[I, S]) ⇒ Boolean, msg: ⇒ Any): Listener[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Listener[I, S]) ⇒ Boolean): Listener[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Listener[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Listener[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Listener[I, S], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Listener[I, S], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "interpretSignal", "tail" : "(signal: S): (I, Data)", "member" : "com.markblokpoel.lanag.core.Listener.interpretSignal", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#interpretSignal(signal:S):(I,com.markblokpoel.lanag.core.Data)", "kind" : "abstract def"}, {"label" : "asListener", "tail" : "(): Listener[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asListener", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#asListener:com.markblokpoel.lanag.core.Listener[I,S]", "kind" : "abstract def"}, {"label" : "asSpeaker", "tail" : "(): Speaker[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Listener.html#asSpeaker:com.markblokpoel.lanag.core.Speaker[I,S]", "kind" : "abstract def"}], "shortDescription" : "A special case of Agent where it is in listener mode.", "trait" : "com\/markblokpoel\/lanag\/core\/Listener.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.NoData", "shortDescription" : "Use this class in your agent simulation implementation when you have nodata to collect.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NoData) ⇒ Boolean, msg: ⇒ Any): NoData", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NoData) ⇒ Boolean): NoData", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NoData", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NoData", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NoData, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NoData, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.NoData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/NoData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/core\/NoData.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.core.PairGenerator", "shortDescription" : "Defines a pair generator.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairGenerator[P, I, S, A, D]) ⇒ Boolean, msg: ⇒ Any): PairGenerator[P, I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PairGenerator[P, I, S, A, D]) ⇒ Boolean): PairGenerator[P, I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PairGenerator[P, I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PairGenerator[P, I, S, A, D]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PairGenerator[P, I, S, A, D], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PairGenerator[P, I, S, A, D], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "sampleGenerator", "tail" : "(parameters: P): Iterator[AgentPair[I, S, A, D]]", "member" : "com.markblokpoel.lanag.core.PairGenerator.sampleGenerator", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#sampleGenerator(parameters:P):Iterator[com.markblokpoel.lanag.core.AgentPair[I,S,A,D]]", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.PairGenerator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "generatePair", "tail" : "(parameters: P): AgentPair[I, S, A, D]", "member" : "com.markblokpoel.lanag.core.PairGenerator.generatePair", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#generatePair(parameters:P):com.markblokpoel.lanag.core.AgentPair[I,S,A,D]", "kind" : "abstract def"}, {"label" : "generateParameterSpace", "tail" : "(): Seq[P]", "member" : "com.markblokpoel.lanag.core.PairGenerator.generateParameterSpace", "link" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html#generateParameterSpace:Seq[P]", "kind" : "abstract def"}], "class" : "com\/markblokpoel\/lanag\/core\/PairGenerator.html", "kind" : "class"}, {"name" : "com.markblokpoel.lanag.core.Parameters", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Parameters) ⇒ Boolean, msg: ⇒ Any): Parameters", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Parameters) ⇒ Boolean): Parameters", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Parameters", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Parameters", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Parameters, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Parameters, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Parameters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Prototype type for parameters.", "trait" : "com\/markblokpoel\/lanag\/core\/Parameters.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.ReferentialIntention", "shortDescription" : "A basic referential intention.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReferentialIntention) ⇒ Boolean, msg: ⇒ Any): ReferentialIntention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReferentialIntention) ⇒ Boolean): ReferentialIntention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ReferentialIntention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ReferentialIntention", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ReferentialIntention, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ReferentialIntention, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.core.ReferentialIntention.isDefined", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#isDefined:Boolean", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.core.ReferentialIntention#<init>", "error" : "unsupported entity"}, {"label" : "content", "tail" : ": Option[Int]", "member" : "com.markblokpoel.lanag.core.ReferentialIntention.content", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#content:Option[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/core\/ReferentialIntention.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.core.Repair", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Repair) ⇒ Boolean, msg: ⇒ Any): Repair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Repair) ⇒ Boolean): Repair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Repair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Repair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Repair, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Repair, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Repair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Signals that implement this trait consist of repair information.", "trait" : "com\/markblokpoel\/lanag\/core\/Repair.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.Signal", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Signal) ⇒ Boolean, msg: ⇒ Any): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Signal) ⇒ Boolean): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Signal, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Signal, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Signal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The prototype signal type.", "trait" : "com\/markblokpoel\/lanag\/core\/Signal.html", "kind" : "trait"}, {"name" : "com.markblokpoel.lanag.core.Speaker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Speaker[I, S]) ⇒ Boolean, msg: ⇒ Any): Speaker[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Speaker[I, S]) ⇒ Boolean): Speaker[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Speaker[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Speaker[I, S]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Speaker[I, S], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Speaker[I, S], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "produceSignal", "tail" : "(intention: I): (S, Data)", "member" : "com.markblokpoel.lanag.core.Speaker.produceSignal", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#produceSignal(intention:I):(S,com.markblokpoel.lanag.core.Data)", "kind" : "abstract def"}, {"label" : "selectIntention", "tail" : "(): I", "member" : "com.markblokpoel.lanag.core.Speaker.selectIntention", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#selectIntention:I", "kind" : "abstract def"}, {"label" : "asListener", "tail" : "(): Listener[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asListener", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#asListener:com.markblokpoel.lanag.core.Listener[I,S]", "kind" : "abstract def"}, {"label" : "asSpeaker", "tail" : "(): Speaker[I, S]", "member" : "com.markblokpoel.lanag.core.Agent.asSpeaker", "link" : "com\/markblokpoel\/lanag\/core\/Speaker.html#asSpeaker:com.markblokpoel.lanag.core.Speaker[I,S]", "kind" : "abstract def"}], "shortDescription" : "A special case of Agent where it is in speaker mode.", "trait" : "com\/markblokpoel\/lanag\/core\/Speaker.html", "kind" : "trait"}], "com.markblokpoel.lanag.util" : [{"name" : "com.markblokpoel.lanag.util.ConfigWrapper", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigWrapper) ⇒ Boolean, msg: ⇒ Any): ConfigWrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConfigWrapper) ⇒ Boolean): ConfigWrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConfigWrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConfigWrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConfigWrapper, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConfigWrapper, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(path: String, fallback: T): T", "member" : "com.markblokpoel.lanag.util.ConfigWrapper.getOrElse", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#getOrElse[T](path:String,fallback:T):T", "kind" : "def"}, {"member" : "com.markblokpoel.lanag.util.ConfigWrapper#<init>", "error" : "unsupported entity"}, {"label" : "conf", "tail" : ": Config", "member" : "com.markblokpoel.lanag.util.ConfigWrapper.conf", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#conf:com.typesafe.config.Config", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/util\/ConfigWrapper.html", "kind" : "case class"}, {"name" : "com.markblokpoel.lanag.util.DefaultMain", "shortDescription" : "", "object" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/DefaultMain$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.util.InteractionIdentifier", "shortDescription" : "Global parameter for generating unique identifier numbers for interactions.", "object" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html", "members_object" : [{"label" : "nextId", "tail" : "(): Long", "member" : "com.markblokpoel.lanag.util.InteractionIdentifier.nextId", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#nextId:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/InteractionIdentifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.util.RNG", "shortDescription" : "A global Random Number Generator.", "object" : "com\/markblokpoel\/lanag\/util\/RNG$.html", "members_object" : [{"label" : "nextBoolean", "tail" : "(p: Double): Boolean", "member" : "com.markblokpoel.lanag.util.RNG.nextBoolean", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#nextBoolean(p:Double):Boolean", "kind" : "def"}, {"label" : "nextBoolean", "tail" : "(): Boolean", "member" : "com.markblokpoel.lanag.util.RNG.nextBoolean", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#nextBoolean:Boolean", "kind" : "def"}, {"label" : "nextInt", "tail" : "(upperbound: Int): Int", "member" : "com.markblokpoel.lanag.util.RNG.nextInt", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#nextInt(upperbound:Int):Int", "kind" : "def"}, {"label" : "nextProbability", "tail" : "(): Double", "member" : "com.markblokpoel.lanag.util.RNG.nextProbability", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#nextProbability:Double", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: Long): Unit", "member" : "com.markblokpoel.lanag.util.RNG.setSeed", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#setSeed(seed:Long):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/RNG$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.markblokpoel.lanag.util.SparkSimulation", "shortDescription" : "A Spark session utility wrapper.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SparkSimulation) ⇒ Boolean, msg: ⇒ Any): SparkSimulation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SparkSimulation) ⇒ Boolean): SparkSimulation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SparkSimulation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SparkSimulation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SparkSimulation, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SparkSimulation, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "com.markblokpoel.lanag.util.SparkSimulation.shutdown", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#shutdown():Unit", "kind" : "def"}, {"label" : "parallelize", "tail" : "(seq: Seq[T])(arg0: ClassTag[T]): RDD[T]", "member" : "com.markblokpoel.lanag.util.SparkSimulation.parallelize", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#parallelize[T](seq:Seq[T])(implicitevidence$1:scala.reflect.ClassTag[T]):org.apache.spark.rdd.RDD[T]", "kind" : "def"}, {"label" : "context", "tail" : "(): SparkContext", "member" : "com.markblokpoel.lanag.util.SparkSimulation.context", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#context:org.apache.spark.SparkContext", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "com.markblokpoel.lanag.util.SparkSimulation.spark", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"member" : "com.markblokpoel.lanag.util.SparkSimulation#<init>", "error" : "unsupported entity"}, {"label" : "cores", "tail" : ": Int", "member" : "com.markblokpoel.lanag.util.SparkSimulation.cores", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#cores:Int", "kind" : "val"}, {"label" : "local", "tail" : ": Boolean", "member" : "com.markblokpoel.lanag.util.SparkSimulation.local", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#local:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/markblokpoel\/lanag\/util\/SparkSimulation.html", "kind" : "case class"}], "com" : [], "com.markblokpoel" : []};